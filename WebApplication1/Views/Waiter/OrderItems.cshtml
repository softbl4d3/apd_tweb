@model List<eUseControl.Web.Models.OrderItemViewModel>
@using eUseControl.Domain.Enums
@{
    ViewBag.Title = "Заказы";
}

<div class="container mt-4">
    <h1>Активные Заказы</h1>
    <div class="row row-cols-1 row-cols-md-3 g-4">
        @foreach (var item in Model)
        {
            <div class="col">
                <div class="card h-100 @GetOrderStatusClass(item.Status) border-4 shadow rounded-3" style="border-radius: 50px;">
                    <div class="card-body">
                        <h5 class="card-title">Блюдо: @item.DishName</h5>
                        <p class="card-text">Столик: @item.TableNumber</p>
                        <p class="card-text">Количество: @item.Amount</p>
                        @if (!string.IsNullOrEmpty(item.Note))
                        {
                            <p class="card-text">Примечание: @item.Note</p>
                        }
                        <p class="card-text">Статус: @item.Status</p>
                        @if (item.Status != DStatus.Completed && item.Status != DStatus.Cancelled)
                        {
                            <form method="post" asp-action="MarkAsDelivered" asp-route-dishName="@item.DishName" asp-route-tableNumber="@item.TableNumber">
                                @Html.ActionLink("Отнес", "MarkDone", new { area = "Waiter" },
                                     new { @class = "btn btn-primary" })
                            </form>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@functions {
    string GetOrderStatusClass(DStatus status)
    {
        return status switch
        {
            DStatus.InProgress => "border-warning",
            DStatus.Ready => "border-success",
            DStatus.Completed => "border-secondary",
            DStatus.Cancelled => "border-danger",
            _ => "border-info"
        };
    }
}